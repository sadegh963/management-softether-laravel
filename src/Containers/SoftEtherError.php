<?php
	declare(strict_types=1);

	namespace SoftEtherApi\Containers;
  class SoftEtherError {
		public const NoError = 'NoError';
		public const ConnectFailed = 'ConnectFailed';
		public const ServerIsNotVpn = 'ServerIsNotVpn';
		public const Disconnected = 'Disconnected';
		public const ProtocolError = 'ProtocolError';
		public const ClientIsNotVpn = 'ClientIsNotVpn';
		public const UserCancel = 'UserCancel';
		public const AuthtypeNotSupported = 'AuthtypeNotSupported';
		public const HubNotFound = 'HubNotFound';
		public const AuthFailed = 'AuthFailed';
		public const HubStopping = 'HubStopping';
		public const SessionRemoved = 'SessionRemoved';
		public const AccessDenied = 'AccessDenied';
		public const SessionTimeout = 'SessionTimeout';
		public const InvalidProtocol = 'InvalidProtocol';
		public const TooManyConnection = 'TooManyConnection';
		public const HubIsBusy = 'HubIsBusy';
		public const ProxyConnectFailed = 'ProxyConnectFailed';
		public const ProxyError = 'ProxyError';
		public const ProxyAuthFailed = 'ProxyAuthFailed';
		public const TooManyUserSession = 'TooManyUserSession';
		public const LicenseError = 'LicenseError';
		public const DeviceDriverError = 'DeviceDriverError';
		public const InternalError = 'InternalError';
		public const SecureDeviceOpenFailed = 'SecureDeviceOpenFailed';
		public const SecurePinLoginFailed = 'SecurePinLoginFailed';
		public const SecureNoCert = 'SecureNoCert';
		public const SecureNoPrivateKey = 'SecureNoPrivateKey';
		public const SecureCantWrite = 'SecureCantWrite';
		public const ObjectNotFound = 'ObjectNotFound';
		public const VlanAlreadyExists = 'VlanAlreadyExists';
		public const VlanInstallError = 'VlanInstallError';
		public const VlanInvalidName = 'VlanInvalidName';
		public const NotSupported = 'NotSupported';
		public const AccountAlreadyExists = 'AccountAlreadyExists';
		public const AccountActive = 'AccountActive';
		public const AccountNotFound = 'AccountNotFound';
		public const AccountInactive = 'AccountInactive';
		public const InvalidParameter = 'InvalidParameter';
		public const SecureDeviceError = 'SecureDeviceError';
		public const NoSecureDeviceSpecified = 'NoSecureDeviceSpecified';
		public const VlanIsUsed = 'VlanIsUsed';
		public const VlanForAccountNotFound = 'VlanForAccountNotFound';
		public const VlanForAccountUsed = 'VlanForAccountUsed';
		public const VlanForAccountDisabled = 'VlanForAccountDisabled';
		public const InvalidValue = 'InvalidValue';
		public const NotFarmController = 'NotFarmController';
		public const TryingToConnect = 'TryingToConnect';
		public const ConnectToFarmController = 'ConnectToFarmController';
		public const CouldNotHostHubOnFarm = 'CouldNotHostHubOnFarm';
		public const FarmMemberHubAdmin = 'FarmMemberHubAdmin';
		public const NullPasswordLocalOnly = 'NullPasswordLocalOnly';
		public const NotEnoughRight = 'NotEnoughRight';
		public const ListenerNotFound = 'ListenerNotFound';
		public const ListenerAlreadyExists = 'ListenerAlreadyExists';
		public const NotFarmMember = 'NotFarmMember';
		public const CipherNotSupported = 'CipherNotSupported';
		public const HubAlreadyExists = 'HubAlreadyExists';
		public const TooManyHubs = 'TooManyHubs';
		public const LinkAlreadyExists = 'LinkAlreadyExists';
		public const LinkCantCreateOnFarm = 'LinkCantCreateOnFarm';
		public const LinkIsOffline = 'LinkIsOffline';
		public const TooManyAccessList = 'TooManyAccessList';
		public const TooManyUser = 'TooManyUser';
		public const TooManyGroup = 'TooManyGroup';
		public const GroupNotFound = 'GroupNotFound';
		public const UserAlreadyExists = 'UserAlreadyExists';
		public const GroupAlreadyExists = 'GroupAlreadyExists';
		public const UserAuthtypeNotPassword = 'UserAuthtypeNotPassword';
		public const OldPasswordWrong = 'OldPasswordWrong';
		public const LinkCantDisconnect = 'LinkCantDisconnect';
		public const AccountNotPresent = 'AccountNotPresent';
		public const AlreadyOnline = 'AlreadyOnline';
		public const Offline = 'Offline';
		public const NotRsa1024 = 'NotRsa1024';
		public const SnatCantDisconnect = 'SnatCantDisconnect';
		public const SnatNeedStandalone = 'SnatNeedStandalone';
		public const SnatNotRunning = 'SnatNotRunning';
		public const SeVpnBlock = 'SeVpnBlock';
		public const BridgeCantDisconnect = 'BridgeCantDisconnect';
		public const LocalBridgeStopping = 'LocalBridgeStopping';
		public const LocalBridgeUnsupported = 'LocalBridgeUnsupported';
		public const CertNotTrusted = 'CertNotTrusted';
		public const ProductCodeInvalid = 'ProductCodeInvalid';
		public const VersionInvalid = 'VersionInvalid';
		public const CaptureDeviceAddError = 'CaptureDeviceAddError';
		public const VpnCodeInvalid = 'VpnCodeInvalid';
		public const CaptureNotFound = 'CaptureNotFound';
		public const Layer3CantDisconnect = 'Layer3CantDisconnect';
		public const Layer3SwExists = 'Layer3SwExists';
		public const Layer3SwNotFound = 'Layer3SwNotFound';
		public const InvalidName = 'InvalidName';
		public const Layer3IfAddFailed = 'Layer3IfAddFailed';
		public const Layer3IfDelFailed = 'Layer3IfDelFailed';
		public const Layer3IfExists = 'Layer3IfExists';
		public const Layer3TableAddFailed = 'Layer3TableAddFailed';
		public const Layer3TableDelFailed = 'Layer3TableDelFailed';
		public const Layer3TableExists = 'Layer3TableExists';
		public const BadClock = 'BadClock';
		public const Layer3CantStartSwitch = 'Layer3CantStartSwitch';
		public const ClientLicenseNotEnough = 'ClientLicenseNotEnough';
		public const BridgeLicenseNotEnough = 'BridgeLicenseNotEnough';
		public const ServerCantAccept = 'ServerCantAccept';
		public const ServerCertExpires = 'ServerCertExpires';
		public const MonitorModeDenied = 'MonitorModeDenied';
		public const BridgeModeDenied = 'BridgeModeDenied';
		public const IpAddressDenied = 'IpAddressDenied';
		public const TooMantItems = 'TooMantItems';
		public const MemoryNotEnough = 'MemoryNotEnough';
		public const ObjectExists = 'ObjectExists';
		public const Fatal = 'Fatal';
		public const ServerLicenseFailed = 'ServerLicenseFailed';
		public const ServerInternetFailed = 'ServerInternetFailed';
		public const ClientLicenseFailed = 'ClientLicenseFailed';
		public const BadCommandOrParam = 'BadCommandOrParam';
		public const InvalidLicenseKey = 'InvalidLicenseKey';
		public const NoVpnServerLicense = 'NoVpnServerLicense';
		public const NoVpnClusterLicense = 'NoVpnClusterLicense';
		public const NotAdminpackServer = 'NotAdminpackServer';
		public const NotAdminpackServerNet = 'NotAdminpackServerNet';
		public const BetaExpires = 'BetaExpires';
		public const BrandedCToS = 'BrandedCToS';
		public const BrandedCFromS = 'BrandedCFromS';
		public const AutoDisconnected = 'AutoDisconnected';
		public const ClientIdRequired = 'ClientIdRequired';
		public const TooManyUsersCreated = 'TooManyUsersCreated';
		public const SubscriptionIsOlder = 'SubscriptionIsOlder';
		public const IllegalTrialVersion = 'IllegalTrialVersion';
		public const NatTTwoOrMore = 'NatTTwoOrMore';
		public const DuplicateDdnsKey = 'DuplicateDdnsKey';
		public const DdnsHostnameExists = 'DdnsHostnameExists';
		public const DdnsHostnameInvalidChar = 'DdnsHostnameInvalidChar';
		public const DdnsHostnameTooLong = 'DdnsHostnameTooLong';
		public const DdnsHostnameIsEmpty = 'DdnsHostnameIsEmpty';
		public const DdnsHostnameTooShort = 'DdnsHostnameTooShort';
		public const Mschap2PasswordNeedReset = 'Mschap2PasswordNeedReset';
		public const DdnsDisconnected = 'DdnsDisconnected';
		public const SpecialListenerIcmpError = 'SpecialListenerIcmpError';
		public const SpecialListenerDnsError = 'SpecialListenerDnsError';
		public const OpenvpnIsNotEnabled = 'OpenvpnIsNotEnabled';
		public const NotSupportedAuthOnOpensource = 'NotSupportedAuthOnOpensource';
		public const Vpngate = 'Vpngate';
		public const VpngateClient = 'VpngateClient';
		public const VpngateInclientCantStop = 'VpngateInclientCantStop';
		public const NotSupportedFunctionOnOpensource = 'NotSupportedFunctionOnOpensource';

		public const ErrorList = [
			0   => self::NoError,
			1   => self::ConnectFailed,
			2   => self::ServerIsNotVpn,
			3   => self::Disconnected,
			4   => self::ProtocolError,
			5   => self::ClientIsNotVpn,
			6   => self::UserCancel,
			7   => self::AuthtypeNotSupported,
			8   => self::HubNotFound,
			9   => self::AuthFailed,
			10  => self::HubStopping,
			11  => self::SessionRemoved,
			12  => self::AccessDenied,
			13  => self::SessionTimeout,
			14  => self::InvalidProtocol,
			15  => self::TooManyConnection,
			16  => self::HubIsBusy,
			17  => self::ProxyConnectFailed,
			18  => self::ProxyError,
			19  => self::ProxyAuthFailed,
			20  => self::TooManyUserSession,
			21  => self::LicenseError,
			22  => self::DeviceDriverError,
			23  => self::InternalError,
			24  => self::SecureDeviceOpenFailed,
			25  => self::SecurePinLoginFailed,
			26  => self::SecureNoCert,
			27  => self::SecureNoPrivateKey,
			28  => self::SecureCantWrite,
			29  => self::ObjectNotFound,
			30  => self::VlanAlreadyExists,
			31  => self::VlanInstallError,
			32  => self::VlanInvalidName,
			33  => self::NotSupported,
			34  => self::AccountAlreadyExists,
			35  => self::AccountActive,
			36  => self::AccountNotFound,
			37  => self::AccountInactive,
			38  => self::InvalidParameter,
			39  => self::SecureDeviceError,
			40  => self::NoSecureDeviceSpecified,
			41  => self::VlanIsUsed,
			42  => self::VlanForAccountNotFound,
			43  => self::VlanForAccountUsed,
			44  => self::VlanForAccountDisabled,
			45  => self::InvalidValue,
			46  => self::NotFarmController,
			47  => self::TryingToConnect,
			48  => self::ConnectToFarmController,
			49  => self::CouldNotHostHubOnFarm,
			50  => self::FarmMemberHubAdmin,
			51  => self::NullPasswordLocalOnly,
			52  => self::NotEnoughRight,
			53  => self::ListenerNotFound,
			54  => self::ListenerAlreadyExists,
			55  => self::NotFarmMember,
			56  => self::CipherNotSupported,
			57  => self::HubAlreadyExists,
			58  => self::TooManyHubs,
			59  => self::LinkAlreadyExists,
			60  => self::LinkCantCreateOnFarm,
			61  => self::LinkIsOffline,
			62  => self::TooManyAccessList,
			63  => self::TooManyUser,
			64  => self::TooManyGroup,
			65  => self::GroupNotFound,
			66  => self::UserAlreadyExists,
			67  => self::GroupAlreadyExists,
			68  => self::UserAuthtypeNotPassword,
			69  => self::OldPasswordWrong,
			73  => self::LinkCantDisconnect,
			74  => self::AccountNotPresent,
			75  => self::AlreadyOnline,
			76  => self::Offline,
			77  => self::NotRsa1024,
			78  => self::SnatCantDisconnect,
			79  => self::SnatNeedStandalone,
			80  => self::SnatNotRunning,
			81  => self::SeVpnBlock,
			82  => self::BridgeCantDisconnect,
			83  => self::LocalBridgeStopping,
			84  => self::LocalBridgeUnsupported,
			85  => self::CertNotTrusted,
			86  => self::ProductCodeInvalid,
			87  => self::VersionInvalid,
			88  => self::CaptureDeviceAddError,
			89  => self::VpnCodeInvalid,
			90  => self::CaptureNotFound,
			91  => self::Layer3CantDisconnect,
			92  => self::Layer3SwExists,
			93  => self::Layer3SwNotFound,
			94  => self::InvalidName,
			95  => self::Layer3IfAddFailed,
			96  => self::Layer3IfDelFailed,
			97  => self::Layer3IfExists,
			98  => self::Layer3TableAddFailed,
			99  => self::Layer3TableDelFailed,
			100 => self::Layer3TableExists,
			101 => self::BadClock,
			102 => self::Layer3CantStartSwitch,
			103 => self::ClientLicenseNotEnough,
			104 => self::BridgeLicenseNotEnough,
			105 => self::ServerCantAccept,
			106 => self::ServerCertExpires,
			107 => self::MonitorModeDenied,
			108 => self::BridgeModeDenied,
			109 => self::IpAddressDenied,
			110 => self::TooMantItems,
			111 => self::MemoryNotEnough,
			112 => self::ObjectExists,
			113 => self::Fatal,
			114 => self::ServerLicenseFailed,
			115 => self::ServerInternetFailed,
			116 => self::ClientLicenseFailed,
			117 => self::BadCommandOrParam,
			118 => self::InvalidLicenseKey,
			119 => self::NoVpnServerLicense,
			120 => self::NoVpnClusterLicense,
			121 => self::NotAdminpackServer,
			122 => self::NotAdminpackServerNet,
			123 => self::BetaExpires,
			124 => self::BrandedCToS,
			125 => self::BrandedCFromS,
			126 => self::AutoDisconnected,
			127 => self::ClientIdRequired,
			128 => self::TooManyUsersCreated,
			129 => self::SubscriptionIsOlder,
			130 => self::IllegalTrialVersion,
			131 => self::NatTTwoOrMore,
			132 => self::DuplicateDdnsKey,
			133 => self::DdnsHostnameExists,
			134 => self::DdnsHostnameInvalidChar,
			135 => self::DdnsHostnameTooLong,
			136 => self::DdnsHostnameIsEmpty,
			137 => self::DdnsHostnameTooShort,
			138 => self::Mschap2PasswordNeedReset,
			139 => self::DdnsDisconnected,
			140 => self::SpecialListenerIcmpError,
			141 => self::SpecialListenerDnsError,
			142 => self::OpenvpnIsNotEnabled,
			143 => self::NotSupportedAuthOnOpensource,
			144 => self::Vpngate,
			145 => self::VpngateClient,
			146 => self::VpngateInclientCantStop,
			147 => self::NotSupportedFunctionOnOpensource,
		];
	}
